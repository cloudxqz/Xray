---
- name: Full Xray VPN deployment with Reality and saved publicKey
  hosts: all
  become: yes
  vars:
    xray_version: v1.8.1
    xray_url: "https://github.com/XTLS/Xray-core/releases/download/{{ xray_version }}/Xray-linux-64.zip"
    config_path: /opt/xray/config.json
    service_path: /usr/lib/systemd/system/xray.service

    listen_ip: "yourip"         # Замените на IP вашего сервера
    port: 443
    dest_host: "yahoo.com:443"
    dest_sni: "yahoo.com"
    fp: "chrome"
    flow: "xtls-rprx-vision"

  tasks:
    - name: Install required packages
      apt:
        name:
          - unzip
          - iptables
          - openssl
          - uuid-runtime
        state: present
        update_cache: yes

    - name: Download Xray binary archive
      get_url:
        url: "{{ xray_url }}"
        dest: /tmp/Xray-linux-64.zip

    - name: Create Xray installation directory
      file:
        path: /opt/xray
        state: directory
        mode: '0755'

    - name: Unzip Xray binary
      unarchive:
        src: /tmp/Xray-linux-64.zip
        dest: /opt/xray
        remote_src: yes

    - name: Set executable permission on xray binary
      file:
        path: /opt/xray/xray
        mode: '0755'
        state: file

    - name: Generate UUID for client
      command: "uuidgen"
      register: uuid_result
      changed_when: false

    - name: Generate x25519 keypair
      command: "/opt/xray/xray x25519"
      register: keypair_result
      changed_when: false

    - set_fact:
        private_key: "{{ keypair_result.stdout_lines[0].split(': ')[1] }}"
        public_key: "{{ keypair_result.stdout_lines[1].split(': ')[1] }}"

    - name: Generate single shortId
      command: "openssl rand -hex 8"
      register: shortid
      changed_when: false

    - set_fact:
        short_id: "{{ shortid.stdout }}"

    - name: Create Xray config.json with privateKey and publicKey stored
      copy:
        dest: "{{ config_path }}"
        mode: '0644'
        content: |
          {
            "log": {
              "loglevel": "info"
            },
            "routing": {
              "rules": [],
              "domainStrategy": "AsIs"
            },
            "inbounds": [
              {
                "listen": "{{ listen_ip }}",
                "port": {{ port }},
                "protocol": "vless",
                "tag": "vless_tls",
                "settings": {
                  "clients": [
                    {
                      "id": "{{ uuid_result.stdout }}",
                      "email": "qwerty",
                      "flow": "{{ flow }}"
                    }
                  ],
                  "decryption": "none"
                },
                "streamSettings": {
                  "network": "tcp",
                  "security": "reality",
                  "realitySettings": {
                    "show": false,
                    "dest": "{{ dest_host }}",
                    "xver": 0,
                    "serverNames": [
                      "{{ dest_sni }}"
                    ],
                    "privateKey": "{{ private_key }}",
                    "publicKey": "{{ public_key }}",
                    "minClientVer": "",
                    "maxClientVer": "",
                    "maxTimeDiff": 0,
                    "shortIds": [
                      "{{ short_id }}"
                    ]
                  }
                },
                "sniffing": {
                  "enabled": true,
                  "destOverride": [
                    "http",
                    "tls"
                  ]
                }
              }
            ],
            "outbounds": [
              {
                "protocol": "freedom",
                "tag": "direct"
              },
              {
                "protocol": "blackhole",
                "tag": "block"
              }
            ]
          }

    - name: Create systemd service file for Xray
      copy:
        dest: "{{ service_path }}"
        mode: '0644'
        content: |
          [Unit]
          Description=Xray Service
          Documentation=https://github.com/xtls
          After=network.target nss-lookup.target

          [Service]
          User=nobody
          CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
          AmbientCapabilities=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
          NoNewPrivileges=true
          ExecStart=/opt/xray/xray run -config /opt/xray/config.json
          Restart=on-failure
          RestartPreventExitStatus=23
          LimitNPROC=10000
          LimitNOFILE=1000000

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon to apply service file changes
      command: systemctl daemon-reload

    - name: Enable and start Xray service
      systemd:
        name: xray
        enabled: yes
        state: started

    - name: Enable IPv4 forwarding in sysctl.conf
      lineinfile:
        path: /etc/sysctl.conf
        regexp: '^net.ipv4.ip_forward='
        line: 'net.ipv4.ip_forward=1'

    - name: Apply sysctl settings
      command: sysctl -p

    - name: Add iptables rule for UDP port 443 DNAT on interface ens3
      ansible.builtin.iptables:
        table: nat
        chain: PREROUTING
        protocol: udp
        in_interface: your interface name
        destination_port: "{{ port }}"
        jump: DNAT
        to_destination: "{{ listen_ip }}"

    - name: Restart Xray service after configuration changes
      systemd:
        name: xray
        state: restarted

    - name: Display client VLESS Reality connection URI
      debug:
        msg: >
          vless://{{ uuid_result.stdout }}@{{ listen_ip }}:{{ port }}?encryption=none&type=tcp&security=reality&pbk={{ public_key }}&fp={{ fp }}&sni={{ dest_sni }}&sid={{ short_id }}&flow={{ flow }}
